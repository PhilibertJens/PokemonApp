// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PE3.Pokemon.web.Data;

namespace PE3.Pokemon.web.Migrations
{
    [DbContext(typeof(PokemonContext))]
    [Migration("20181122204625_pokemonMigration")]
    partial class pokemonMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PE3.Pokemon.web.Entities.Pokemon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("HasAllolanForm");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new { Id = new Guid("090bd652-7065-4e36-bd55-19845f5f1147"), Description = "It bears the seed of a plant on its back from birth. The seed slowly develops. Researchers are unsure whether to classify Bulbasaur as a plant or animal. Bulbasaur are extremely calm and very difficult to capture in the wild. ", HasAllolanForm = false, ImgUrl = "Bulbasaur.png", Location = "Starter", Name = "Bulbasaur" },
                        new { Id = new Guid("17d13bdb-72f6-4906-9d08-35d60cadf539"), Description = "When the bulb on its back grows large, it appears to lose the ability to stand on its hind leg", HasAllolanForm = false, ImgUrl = "Ivysaur.png", Location = "Evolve Bulbasaur", Name = "Ivysaur" },
                        new { Id = new Guid("66ae9046-109a-4fdb-aa1b-0c7a4e3c36bd"), Description = "The plant blooms when it is absorbing solar energy. It stays on the move to seek sunlight.", HasAllolanForm = false, ImgUrl = "Venusaur.png", Location = "Evolve Ivysaur", Name = "Venusaur" },
                        new { Id = new Guid("f4ad61a1-ea7a-4ef4-85f7-395b94b2cfa1"), Description = "Obviously prefers hot places. When it rains, steam is said to spout from the tip of its tail.", HasAllolanForm = false, ImgUrl = "Charmander.png", Location = "Starter", Name = "Charmander" },
                        new { Id = new Guid("bd6f49d8-b17c-47cc-9e2e-6e73e4510cfd"), Description = "When it swings its burning tail, it elevates the temperature to unbearably high levels.", HasAllolanForm = false, ImgUrl = "Charmeleon.png", Location = "Evolve Charmander", Name = "Charmeleon" },
                        new { Id = new Guid("d37624fe-618a-4c86-8c7e-2692f126a215"), Description = "Spits fire that is hot enough to melt boulders. Known to cause forest fires unintentionally.", HasAllolanForm = false, ImgUrl = "Charizard.png", Location = "Evolve Charmeleon", Name = "Charizard" },
                        new { Id = new Guid("b8403264-1f89-4ce2-b0c5-d5c0705dca1a"), Description = "After birth, its back swells and hardens into a shell. Powerfully sprays foam from its mouth.", HasAllolanForm = false, ImgUrl = "Squirtle.png", Location = "Starter", Name = "Squirtle" },
                        new { Id = new Guid("028b2e1c-1ef6-4d22-b0ad-eace29f4f2fe"), Description = "Often hides in water to stalk unwary prey. For swimming fast, it moves its ears to maintain balance", HasAllolanForm = false, ImgUrl = "Wartortle.png", Location = "Evolve Squirtle", Name = "Wartortle" },
                        new { Id = new Guid("3f1345c2-7e26-43c2-8543-15d647718a55"), Description = "A brutal Pokémon with pressurized water jets on its shell. They are used for high speed tackles.", HasAllolanForm = false, ImgUrl = "Blastoise.png", Location = "evolve Wartortle", Name = "Blastoise" },
                        new { Id = new Guid("44810325-90ea-406b-b866-3058683d2b67"), Description = "Its short feet are tipped with suction pads that enable it to tirelessly climb slopes and walls.", HasAllolanForm = false, ImgUrl = "Caterpie.png", Location = "Routes 2, 24 and 25,Viridian Forest", Name = "Caterpie" },
                        new { Id = new Guid("0e4a1ed9-90c3-4583-8ef9-88d942cc938a"), Description = "This Pokémon is vulnerable to attack while its shell is soft, exposing its weak and tender body", HasAllolanForm = false, ImgUrl = "Metapod.png", Location = "Routes 24 and 25, Viridian Forest or evolve Caterpie", Name = "Metapod" },
                        new { Id = new Guid("bff628c0-da94-4d38-bf03-dfc10eb5c1f8"), Description = "In battle, it flaps its wings at high speed to release highly toxic dust into the air.", HasAllolanForm = false, ImgUrl = "Butterfree.png", Location = "Evolve Metapod", Name = "Butterfree" },
                        new { Id = new Guid("450af65a-8068-4856-ae09-b87828590c30"), Description = "Often found in forests, eating leaves. It has a sharp venomous stinger on its head.", HasAllolanForm = false, ImgUrl = "Weedle.png", Location = "Routes 2, 24, and 25, Viridian Forest", Name = "Weedle" },
                        new { Id = new Guid("77a0bda5-8a01-48d6-b05c-4c867ba54bee"), Description = "Almost incapable of moving, this Pokémon can only harden its shell to protect itself from predators.", HasAllolanForm = false, ImgUrl = "Kakuna.png", Location = "Routes 24 and 25, Viridian Forest", Name = "Kakuna" },
                        new { Id = new Guid("4288066d-237e-4a7c-8994-00f6a566c32f"), Description = "Flies at high speed and attacks using its large venomous stingers on its forelegs and tail.", HasAllolanForm = false, ImgUrl = "Beedrill.png", Location = "Evolve Kakuna", Name = "Beedrill" }
                    );
                });

            modelBuilder.Entity("PE3.Pokemon.web.Entities.PokemonType", b =>
                {
                    b.Property<Guid>("PokemonId");

                    b.Property<Guid>("TypeId");

                    b.HasKey("PokemonId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("PokemonTypes");
                });

            modelBuilder.Entity("PE3.Pokemon.web.Entities.PokemonUser", b =>
                {
                    b.Property<Guid>("PokemonId");

                    b.Property<Guid>("UserId");

                    b.HasKey("PokemonId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PokemonUsers");
                });

            modelBuilder.Entity("PE3.Pokemon.web.Entities.Type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new { Id = new Guid("6d64c320-719c-4dc6-9d00-8100804a7774"), Name = "Normal" },
                        new { Id = new Guid("703bafca-dcf0-49eb-81b1-24705cd60aac"), Name = "Fighting" },
                        new { Id = new Guid("987da79e-9400-4288-8f94-53c846162a3a"), Name = "Flying" },
                        new { Id = new Guid("d6927210-9a16-4cd1-a999-5ab0681129c4"), Name = "Poison" },
                        new { Id = new Guid("ac6b8edc-0783-49a7-850b-dde798bdd6cb"), Name = "Ground" },
                        new { Id = new Guid("c17baf55-7106-49c0-84e5-9826e6aa3cef"), Name = "Rock" },
                        new { Id = new Guid("2160debb-f9fa-4e21-a0ec-06075827c3d3"), Name = "Bug" },
                        new { Id = new Guid("ed6107de-282c-41c2-a229-c5422d8425c2"), Name = "Ghost" },
                        new { Id = new Guid("f59db6fe-22d2-4b84-8ffb-16a1e99cf41f"), Name = "Steel" },
                        new { Id = new Guid("a699c0ff-1fa7-4258-aa2a-f6e5020b3541"), Name = "Fire" },
                        new { Id = new Guid("8cf35603-1032-451b-be00-f1b26a0abef9"), Name = "Water" },
                        new { Id = new Guid("635174c5-deba-4494-83d8-6305645a6a6f"), Name = "Grass" },
                        new { Id = new Guid("bad9a2c8-0e87-40ef-b16d-340abd2ad3b1"), Name = "Electric" },
                        new { Id = new Guid("2d2f9559-4501-44c9-9bff-c9d89e8440bc"), Name = "Psychic" },
                        new { Id = new Guid("bbc8c790-86a9-4417-8c34-6dadcfb6e983"), Name = "Ice" },
                        new { Id = new Guid("59e53dc8-16a3-4572-8159-d96da5eb9118"), Name = "Dragon" },
                        new { Id = new Guid("58696251-80d3-4b09-8d45-6f8ccbc0d120"), Name = "Dark" },
                        new { Id = new Guid("410047ef-7e1f-49ed-bc9f-5222eab13a6d"), Name = "Fairy" }
                    );
                });

            modelBuilder.Entity("PE3.Pokemon.web.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PE3.Pokemon.web.Entities.PokemonType", b =>
                {
                    b.HasOne("PE3.Pokemon.web.Entities.Pokemon", "Pokemon")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PE3.Pokemon.web.Entities.Type", "Type")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PE3.Pokemon.web.Entities.PokemonUser", b =>
                {
                    b.HasOne("PE3.Pokemon.web.Entities.Pokemon", "Pokemon")
                        .WithMany("PokemonUsers")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PE3.Pokemon.web.Entities.User", "User")
                        .WithMany("PokemonUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
